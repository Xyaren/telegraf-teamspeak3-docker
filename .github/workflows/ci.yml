name: CI
on:
  schedule:
    - cron: "0 10 * * *"
  push:
    branches:
      - "**"
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - "main"
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - uses: WillAbides/setup-go-faster@v1.14.0
      with:
        go-version-file: go.mod
    - name: Get dependencies
      run: |
        go get -v -t -d ./...
    - name: Build
      run: go build -v ./
  lint:
    name: "Lint"
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - uses: WillAbides/setup-go-faster@v1.14.0
      with:
        go-version-file: go.mod
    - run: "go vet ./..."
    - uses: dominikh/staticcheck-action@v1.4.0
      with:
        install-go: false
  docker:
    name: "Docker"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/xyaren/telegraf-teamspeak3
          # generate Docker tags based on the following events/attributes
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
